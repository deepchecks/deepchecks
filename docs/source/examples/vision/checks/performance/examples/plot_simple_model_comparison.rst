
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/vision/checks/performance/examples/plot_simple_model_comparison.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_vision_checks_performance_examples_plot_simple_model_comparison.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_vision_checks_performance_examples_plot_simple_model_comparison.py:


Simple Model Comparison
***********************
This notebooks provides an overview for using and understanding simple model comparison check.

**Structure:**

* `What is the purpose of the check? <#what-is-the-purpose-of-the-check>`__
* `Generate data an model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__

What is the purpose of the check?
=================================
The simple model is designed to produce the best performance achievable using very
simple rules. The goal of the simple model is to provide a baseline of minimal
model performance for the given task, to which the user model may be compared. If
the user model achieves less or a similar score to the simple model, this is an
indicator for a possible problem with the model (e.g. it wasn't trained properly).

In the computer vision module, this checks applies only to classification problems.

The check has four possible strategies for selecting the behavior of the baseline
simple model. By default the check uses the **prior** strategy, which can be
overriden in the checks' parameters using ``strategy``. Similiar to the `tabular simple
model comparison check
</examples/tabular/checks/performance/test_autoexamples/simple_model_comparison.html>`__,
there is no simple model which is more "correct" to use, each gives a different baseline
to compare to, and you may experiment with the different types and see how it performs
on your data.

The available strategies are:

* **prior** (Default) - The probability vector always contains the empirical class
  prior distribution (i.e. the class distribution observed in the training set).
* **most_frequent** - The most frequent prediction is predicted. The probability
  vector is 1 for the most frequent prediction and 0 for the other predictions.
* **stratified** - The predictions are generated by sampling one-hot vectors
  from a multinomial distribution parametrized by the empirical class prior probabilities.
* **uniform** - Generates predictions uniformly at random from the list of unique
  classes observed in y, i.e. each class has equal probability.

.. GENERATED FROM PYTHON SOURCE LINES 45-47

Generate data and model
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: default


    from deepchecks.vision.checks.performance import SimpleModelComparison








.. GENERATED FROM PYTHON SOURCE LINES 51-58

.. code-block:: default


    from deepchecks.vision.datasets.classification import mnist

    mnist_model = mnist.load_model()
    train_ds = mnist.load_dataset(train=True, object_type='VisionData')
    test_ds = mnist.load_dataset(train=False, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 59-64

Run the check
-------------
We will run the check with the prior model type. The check will use the default
classification metrics - precision and recall. This can be overridden by
providing an alternative scorer using the ``alternative_metrics``` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: default


    check = SimpleModelComparison(strategy='stratified')
    result = check.run(train_ds, test_ds, mnist_model)








.. GENERATED FROM PYTHON SOURCE LINES 69-71

.. code-block:: default

    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">



    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major":2,"version_minor":0,"state":{"100fcca7a4aa46cea08dac99f4fe8d67":{"model_name":"VBoxModel","model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","state":{"_dom_classes":[],"children":["IPY_MODEL_d07cfd6b8d4641ee9f72c25f013e6539","IPY_MODEL_9f68e50fab894c77b480eef143f699ae","IPY_MODEL_44c98ffc12e34277bd15fd40a25b0a61"],"layout":"IPY_MODEL_5ef1615302354753b9a52197a27bd24a"}},"d07cfd6b8d4641ee9f72c25f013e6539":{"model_name":"HTMLModel","model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","state":{"_dom_classes":[],"layout":"IPY_MODEL_7d995c05789440bf8371286109b64eee","style":"IPY_MODEL_338bbb7bd9c64220929c25e32cacd996","value":"<h4>Simple Model Comparison</h4><p>Compare given model score to simple model score (according to given model type). <a href=\"https://docs.deepchecks.com/en/0.6.0.dev1/examples/vision/checks/performance/simple_model_comparison.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p><h5>Additional Outputs</h5>"}},"7d995c05789440bf8371286109b64eee":{"model_name":"LayoutModel","model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","state":{}},"338bbb7bd9c64220929c25e32cacd996":{"model_name":"DescriptionStyleModel","model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","state":{}},"9f68e50fab894c77b480eef143f699ae":{"model_name":"FigureModel","model_module":"jupyterlab-plotly","model_module_version":"^5.6.0","state":{"_config":{"plotlyServerURL":"https://plot.ly"},"_data":[{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Test<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Test","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"Test","offsetgroup":"Test","orientation":"v","showlegend":true,"x":["0","1","6","2","5","3","4","7","8","9"],"xaxis":"x","y":{"dtype":"float64","shape":[10]},"yaxis":"y","type":"histogram","uid":"d09de196-1206-4cff-8226-cf51c7cdd551"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Test<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Test","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"Test","offsetgroup":"Test","orientation":"v","showlegend":false,"x":["4","8","0","3","1","9","6","5","7","2"],"xaxis":"x2","y":{"dtype":"float64","shape":[10]},"yaxis":"y2","type":"histogram","uid":"fabcbd9c-611d-4f8a-9bc8-93126e2cfcf2"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Simple Model<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Simple Model","marker":{"color":"#EF553B","pattern":{"shape":""}},"name":"Simple Model","offsetgroup":"Simple Model","orientation":"v","showlegend":true,"x":["1","0","2","6","8","3","9","7","5","4"],"xaxis":"x","y":{"dtype":"float64","shape":[10]},"yaxis":"y","type":"histogram","uid":"485ad67a-16fa-4091-99df-c11a876349be"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Simple Model<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Simple Model","marker":{"color":"#EF553B","pattern":{"shape":""}},"name":"Simple Model","offsetgroup":"Simple Model","orientation":"v","showlegend":false,"x":["1","2","0","3","8","6","9","7","5","4"],"xaxis":"x2","y":{"dtype":"float64","shape":[10]},"yaxis":"y2","type":"histogram","uid":"c32016d4-1a5b-40da-a19c-1db780ba05a8"}],"_dom_classes":[],"_js2py_layoutDelta":{},"_js2py_pointsCallback":{},"_js2py_relayout":{},"_js2py_restyle":{},"_js2py_traceDeltas":{},"_js2py_update":{},"_layout":{"annotations":[{"showarrow":false,"text":"Recall","x":0.2375,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"},{"showarrow":false,"text":"Precision","x":0.7625,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"}],"barmode":"group","legend":{"title":{"text":"Dataset"},"tracegroupgap":0},"margin":{"t":60},"template":{"data":{"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,0.475],"tickangle":60,"tickprefix":"Class ","type":"category"},"yaxis":{"anchor":"x","domain":[0.0,1.0],"showticklabels":true},"xaxis2":{"anchor":"y2","domain":[0.525,1.0],"matches":"x","tickangle":60,"tickprefix":"Class ","type":"category"},"yaxis2":{"anchor":"x2","domain":[0.0,1.0],"showticklabels":true}},"_py2js_addTraces":{},"_py2js_animate":{},"_py2js_deleteTraces":{},"_py2js_moveTraces":{},"_py2js_relayout":{},"_py2js_removeLayoutProps":{},"_py2js_removeTraceProps":{},"_py2js_restyle":{},"_py2js_update":{},"_view_count":0},"buffers":[{"encoding":"base64","path":["_data",0,"y","buffer"],"data":"9qGxPjTW7z+XTdhPQsbvP4M2plckxO8/8Af8AX/A7z/YPJVC+prvP+Suny1Whu8/JHG17C5y7z+vUK9Qr1DvP/dGn4dSJe8/meQrg6sc7z8="},{"encoding":"base64","path":["_data",1,"y","buffer"],"data":"iQqyDQHF7z/NAEGR9bLvP60668ebpO8/ZlmWZVmW7z++iH04ZpTvP9dJa1W8jO8/wIble3R47z8LW0Gb4G3vP69Qr1CvUO8/cUJKnmVE7z8="},{"encoding":"base64","path":["_data",2,"y","buffer"],"data":"yUtQJBGMvT9281sIGKW6P6OuqCvqiro/nMOuZ4J0uj/B8Fq1QQW6P3qQu362WLk/1vTrPohXtz/XKNco1yi3P623oAyr9bY/SB9MynRgtT8="},{"encoding":"base64","path":["_data",3,"y","buffer"],"data":"2IprVwFKvT/TzRGGM928P2G5pxGWe7o/FQPk6FGtuT+amZmZmZm5P8wNMSAdS7k/9AV9QV/Qtz+i32wd+s22P95cT+CSC7Y/j0vSxN+ptT8="}]},"44c98ffc12e34277bd15fd40a25b0a61":{"model_name":"HTMLModel","model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","state":{"_dom_classes":[],"layout":"IPY_MODEL_c6adf74614bb4a73a526e53a5e85ec81","style":"IPY_MODEL_eae749c2aa1d45e68963a23660016c67"}},"c6adf74614bb4a73a526e53a5e85ec81":{"model_name":"LayoutModel","model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","state":{}},"eae749c2aa1d45e68963a23660016c67":{"model_name":"DescriptionStyleModel","model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","state":{}},"5ef1615302354753b9a52197a27bd24a":{"model_name":"LayoutModel","model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","state":{}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major":2,"version_minor":0,"model_id":"100fcca7a4aa46cea08dac99f4fe8d67"}
    </script>


    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 72-81

Observe the check's output
--------------------------
We can see in the results that the check calculates the score for each class
in the dataset, and compares the scores between our model and the simple model.

In addition to the graphic output, the check also returns a value which includes
all of the information that is needed for defining the conditions for validation.

The value is a dataframe that contains the metrics' values for each class and dataset:

.. GENERATED FROM PYTHON SOURCE LINES 81-83

.. code-block:: default


    result.value.sort_values(by=['Class', 'Metric']).head(10)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Metric</th>
          <th>Class</th>
          <th>Class Name</th>
          <th>Value</th>
          <th>Dataset</th>
          <th>Number of samples</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>Precision</td>
          <td>0</td>
          <td>0</td>
          <td>0.988844</td>
          <td>Test</td>
          <td>980</td>
        </tr>
        <tr>
          <th>0</th>
          <td>Precision</td>
          <td>0</td>
          <td>0</td>
          <td>0.103448</td>
          <td>Simple Model</td>
          <td>980</td>
        </tr>
        <tr>
          <th>10</th>
          <td>Recall</td>
          <td>0</td>
          <td>0</td>
          <td>0.994898</td>
          <td>Test</td>
          <td>980</td>
        </tr>
        <tr>
          <th>10</th>
          <td>Recall</td>
          <td>0</td>
          <td>0</td>
          <td>0.104082</td>
          <td>Simple Model</td>
          <td>980</td>
        </tr>
        <tr>
          <th>1</th>
          <td>Precision</td>
          <td>1</td>
          <td>1</td>
          <td>0.986865</td>
          <td>Test</td>
          <td>1135</td>
        </tr>
        <tr>
          <th>1</th>
          <td>Precision</td>
          <td>1</td>
          <td>1</td>
          <td>0.114410</td>
          <td>Simple Model</td>
          <td>1135</td>
        </tr>
        <tr>
          <th>11</th>
          <td>Recall</td>
          <td>1</td>
          <td>1</td>
          <td>0.992952</td>
          <td>Test</td>
          <td>1135</td>
        </tr>
        <tr>
          <th>11</th>
          <td>Recall</td>
          <td>1</td>
          <td>1</td>
          <td>0.115419</td>
          <td>Simple Model</td>
          <td>1135</td>
        </tr>
        <tr>
          <th>2</th>
          <td>Precision</td>
          <td>2</td>
          <td>2</td>
          <td>0.977099</td>
          <td>Test</td>
          <td>1032</td>
        </tr>
        <tr>
          <th>2</th>
          <td>Precision</td>
          <td>2</td>
          <td>2</td>
          <td>0.112750</td>
          <td>Simple Model</td>
          <td>1032</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.078 seconds)


.. _sphx_glr_download_examples_vision_checks_performance_examples_plot_simple_model_comparison.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_simple_model_comparison.py <plot_simple_model_comparison.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_simple_model_comparison.ipynb <plot_simple_model_comparison.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
