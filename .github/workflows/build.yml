name: Build

on:
  push:
    branches: [ master ]
  pull_request: 
    branches: [ master ]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted]
        python-version: ["3.6", "3.7", "3.8", "3.9"] #TODO: add 3.10 when scikit-learn have a wheel https://github.com/scikit-learn/scikit-learn/pull/21232

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set Up Env
      run: make env
    - name: Run Tests
      run: make test

  chores:
    runs-on: [self-hosted]

    needs: tests
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Run Code Coverage
      id: coverage
      run: |
        make coverage
        COVERAGE=$(cat .cover.log |  grep TOTAL | tr -s ' ' | cut -d ' ' -f4 | tr -dc '0-9' )
        COVERAGE=51
        echo "::set-output name=code_coverage::$COVERAGE"

    - name: Validate Code Style
      id: validate
      run: |
        make validate
        PYLINT=$(cat .pylint.log | sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p')
        echo "::set-output name=pylint_score::$PYLINT"

    - name: Generate & Publish Badges
      run: |
        pip install anybadge awscli
        # generate code-coverage badge
        
        anybadge -s "%" -l coverage -v ${{ steps.coverage.outputs.code_coverage }} -f coverage.svg coverage
        # generate pylint-score badge
        anybadge -l pylint -v ${{ steps.validate.outputs.pylint_score }} -f pylint.svg pylint
        
        #Upload to S3
        aws s3 cp pylint.svg s3://deepchecks-public/mlchecks/pylint.svg 
        aws s3 cp coverage.svg s3://deepchecks-public/mlchecks/coverage.svg 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
