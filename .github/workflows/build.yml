# ----------------------------------------------------------------------------
# Copyright (C) 2021-2023 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------
#
name: Build

on:
  push:
    branches: [ main ]
  pull_request: 
    branches: [ main, nlp-base]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DISABLE_DEEPCHECKS_ANONYMOUS_TELEMETRY: "true"
  FAIL_ON_DEEPCHECKS_DEPRECATION_WARNINGS: "true"

jobs:
  tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9"] #TODO: add 3.10 when upgrading torch to 1.11

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set Up Env
      run: make env
    - name: pip freeze
      run: make freeze
#    - name: Debugging with ssh
#      uses: lhotari/action-upterm@v1
#      with:
#        ## limits ssh access and adds the ssh public key for the user which triggered the workflow
#        limit-access-to-actor: true
    - name: Run Tests
      run: make test

  coverage:
    runs-on: ubuntu-22.04
    name: coveralls
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    - name: Set Up Env
      run: make env
    - name: Run Coverage
      run: make coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9 #TODO: add 3.10 when scikit-learn have a wheel https://github.com/scikit-learn/scikit-learn/pull/21232
    - name: Run Tests
      run: make test-win

  scikit-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        scikit-version: [ '0.23.2', '1.0.2', '1.1.0' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - name: Setup env and dev requirements
        run: make env requirements dev-requirements && pip install scikit-learn==${{ matrix.scikit-version }}
      - name: Run suite test
        run: make test args=tests/tabular/suites

  scikit-testsnew:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        scikit-version: [ '1.3.2', '1.6.0' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Setup env and dev requirements
        run: make env requirements dev-requirements && pip install scikit-learn==${{ matrix.scikit-version }}
      - name: Run suite test
        run: make test args=tests/tabular/suites

  dependencies-license-check:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Get explicit and transitive dependencies
      run: |
        echo torch==1.11.0+cpu > constraints.txt
        pip install torch==1.11.0+cpu torchvision==0.11.3+cpu --index-url https://download.pytorch.org/whl/cpu
        pip install -r requirements/requirements.txt -c constraints.txt
        pip install -r requirements/vision-requirements.txt -c constraints.txt
        pip install -r requirements/nlp-requirements.txt -c constraints.txt
        pip freeze > requirements-all.txt
    - name: Set up liccheck
      run: |
        pip install liccheck
        cat requirements/nlp-requirements.txt requirements/vision-requirements.txt requirements/requirements.txt > req_all.txt
    - name: Run liccheck
      run: python -m liccheck -r req_all.txt -s liccheck.ini 

#  gpu-tests:
#    runs-on: [self-hosted, gpu]
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.7'
#      - name: Set Up Env
#        run: make env
#      - name: Run Tests
#        run: make vision-gpu-tests


#  documentation-check:
#    runs-on: ubuntu-22.04
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v1
#        with:
#          node-version: '14.x'
#      - name: Test Build
#        run: |
#          make website
#          cd docs/_website
#          if [ -e package-lock.json ]; then
#            npm ci
#          else
#            npm i
#          fi
#          npm run build
